{"ast":null,"code":"// Este archivo registra el service worker para hacer tu app una PWA\nconst isLocalhost=Boolean(window.location.hostname==='localhost'||// [::1] es la dirección IPv6 de localhost.\nwindow.location.hostname==='[::1]'||// 127.0.0.0/8 son todas las direcciones de loopback IPv4.\nwindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));export function register(config){if('serviceWorker'in navigator){const swUrl=`${process.env.PUBLIC_URL}/service-worker.js`;if(isLocalhost){// Esto es localhost. Verifica si el SW existe y es válido.\ncheckValidServiceWorker(swUrl,config);navigator.serviceWorker.ready.then(()=>{console.log('Esta app está siendo servida en caché por un Service Worker.');});}else{// No es localhost. Solo registra normalmente.\nregisterValidSW(swUrl,config);}}}function registerValidSW(swUrl,config){navigator.serviceWorker.register(swUrl).then(registration=>{registration.onupdatefound=()=>{const installingWorker=registration.installing;if(installingWorker==null){return;}installingWorker.onstatechange=()=>{if(installingWorker.state==='installed'){if(navigator.serviceWorker.controller){console.log('Nuevas actualizaciones están disponibles.');if(config&&config.onUpdate){config.onUpdate(registration);}}else{console.log('Contenido cacheado para uso offline.');if(config&&config.onSuccess){config.onSuccess(registration);}}}};};}).catch(error=>{console.error('Error al registrar el Service Worker:',error);});}function checkValidServiceWorker(swUrl,config){fetch(swUrl,{headers:{'Service-Worker':'script'}}).then(response=>{const contentType=response.headers.get('content-type');if(response.status===404||contentType!=null&&contentType.indexOf('javascript')===-1){navigator.serviceWorker.ready.then(registration=>{registration.unregister().then(()=>{window.location.reload();});});}else{registerValidSW(swUrl,config);}}).catch(()=>{console.log('Sin conexión a internet. App funcionando en modo offline.');});}export function unregister(){if('serviceWorker'in navigator){navigator.serviceWorker.ready.then(registration=>{registration.unregister();}).catch(error=>{console.error(error.message);});}}","map":{"version":3,"names":["isLocalhost","Boolean","window","location","hostname","match","register","config","navigator","swUrl","process","env","PUBLIC_URL","checkValidServiceWorker","serviceWorker","ready","then","console","log","registerValidSW","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","fetch","headers","response","contentType","get","status","indexOf","unregister","reload","message"],"sources":["C:/Users/ffmirama/OneDrive - Cencosud/Documentos/PWA/trivia-pwa/client/src/serviceWorkerRegistration.js"],"sourcesContent":["// Este archivo registra el service worker para hacer tu app una PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] es la dirección IPv6 de localhost.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 son todas las direcciones de loopback IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if ('serviceWorker' in navigator) {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n      if (isLocalhost) {\n        // Esto es localhost. Verifica si el SW existe y es válido.\n        checkValidServiceWorker(swUrl, config);\n  \n        navigator.serviceWorker.ready.then(() => {\n          console.log('Esta app está siendo servida en caché por un Service Worker.');\n        });\n      } else {\n        // No es localhost. Solo registra normalmente.\n        registerValidSW(swUrl, config);\n      }\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                console.log('Nuevas actualizaciones están disponibles.');\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                console.log('Contenido cacheado para uso offline.');\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error('Error al registrar el Service Worker:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then((response) => {\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log('Sin conexión a internet. App funcionando en modo offline.');\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then((registration) => {\n          registration.unregister();\n        })\n        .catch((error) => {\n          console.error(error.message);\n        });\n    }\n  }\n  "],"mappings":"AAAA;AAEA,KAAM,CAAAA,WAAW,CAAGC,OAAO,CACvBC,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAK,WAAW,EACtC;AACAF,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAK,OAAO,EACpC;AACAF,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAC5B,wDACF,CACJ,CAAC,CAED,MAAO,SAAS,CAAAC,QAAQA,CAACC,MAAM,CAAE,CAC/B,GAAI,eAAe,EAAI,CAAAC,SAAS,CAAE,CAChC,KAAM,CAAAC,KAAK,CAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,oBAAoB,CAE3D,GAAIZ,WAAW,CAAE,CACf;AACAa,uBAAuB,CAACJ,KAAK,CAAEF,MAAM,CAAC,CAEtCC,SAAS,CAACM,aAAa,CAACC,KAAK,CAACC,IAAI,CAAC,IAAM,CACvCC,OAAO,CAACC,GAAG,CAAC,8DAA8D,CAAC,CAC7E,CAAC,CAAC,CACJ,CAAC,IAAM,CACL;AACAC,eAAe,CAACV,KAAK,CAAEF,MAAM,CAAC,CAChC,CACF,CACF,CAEA,QAAS,CAAAY,eAAeA,CAACV,KAAK,CAAEF,MAAM,CAAE,CACtCC,SAAS,CAACM,aAAa,CACpBR,QAAQ,CAACG,KAAK,CAAC,CACfO,IAAI,CAAEI,YAAY,EAAK,CACtBA,YAAY,CAACC,aAAa,CAAG,IAAM,CACjC,KAAM,CAAAC,gBAAgB,CAAGF,YAAY,CAACG,UAAU,CAChD,GAAID,gBAAgB,EAAI,IAAI,CAAE,CAC5B,OACF,CACAA,gBAAgB,CAACE,aAAa,CAAG,IAAM,CACrC,GAAIF,gBAAgB,CAACG,KAAK,GAAK,WAAW,CAAE,CAC1C,GAAIjB,SAAS,CAACM,aAAa,CAACY,UAAU,CAAE,CACtCT,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC,CACxD,GAAIX,MAAM,EAAIA,MAAM,CAACoB,QAAQ,CAAE,CAC7BpB,MAAM,CAACoB,QAAQ,CAACP,YAAY,CAAC,CAC/B,CACF,CAAC,IAAM,CACLH,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC,CACnD,GAAIX,MAAM,EAAIA,MAAM,CAACqB,SAAS,CAAE,CAC9BrB,MAAM,CAACqB,SAAS,CAACR,YAAY,CAAC,CAChC,CACF,CACF,CACF,CAAC,CACH,CAAC,CACH,CAAC,CAAC,CACDS,KAAK,CAAEC,KAAK,EAAK,CAChBb,OAAO,CAACa,KAAK,CAAC,uCAAuC,CAAEA,KAAK,CAAC,CAC/D,CAAC,CAAC,CACN,CAEA,QAAS,CAAAjB,uBAAuBA,CAACJ,KAAK,CAAEF,MAAM,CAAE,CAC9CwB,KAAK,CAACtB,KAAK,CAAE,CACXuB,OAAO,CAAE,CAAE,gBAAgB,CAAE,QAAS,CACxC,CAAC,CAAC,CACChB,IAAI,CAAEiB,QAAQ,EAAK,CAClB,KAAM,CAAAC,WAAW,CAAGD,QAAQ,CAACD,OAAO,CAACG,GAAG,CAAC,cAAc,CAAC,CACxD,GACEF,QAAQ,CAACG,MAAM,GAAK,GAAG,EACtBF,WAAW,EAAI,IAAI,EAAIA,WAAW,CAACG,OAAO,CAAC,YAAY,CAAC,GAAK,CAAC,CAAE,CACjE,CACA7B,SAAS,CAACM,aAAa,CAACC,KAAK,CAACC,IAAI,CAAEI,YAAY,EAAK,CACnDA,YAAY,CAACkB,UAAU,CAAC,CAAC,CAACtB,IAAI,CAAC,IAAM,CACnCd,MAAM,CAACC,QAAQ,CAACoC,MAAM,CAAC,CAAC,CAC1B,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,IAAM,CACLpB,eAAe,CAACV,KAAK,CAAEF,MAAM,CAAC,CAChC,CACF,CAAC,CAAC,CACDsB,KAAK,CAAC,IAAM,CACXZ,OAAO,CAACC,GAAG,CAAC,2DAA2D,CAAC,CAC1E,CAAC,CAAC,CACN,CAEA,MAAO,SAAS,CAAAoB,UAAUA,CAAA,CAAG,CAC3B,GAAI,eAAe,EAAI,CAAA9B,SAAS,CAAE,CAChCA,SAAS,CAACM,aAAa,CAACC,KAAK,CAC1BC,IAAI,CAAEI,YAAY,EAAK,CACtBA,YAAY,CAACkB,UAAU,CAAC,CAAC,CAC3B,CAAC,CAAC,CACDT,KAAK,CAAEC,KAAK,EAAK,CAChBb,OAAO,CAACa,KAAK,CAACA,KAAK,CAACU,OAAO,CAAC,CAC9B,CAAC,CAAC,CACN,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}